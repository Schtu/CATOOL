
// This file has been generated by the GUI designer. Do not modify.
namespace catoolgui
{
	public partial class exportCert
	{
		private global::Gtk.Table table3;
		
		private global::Gtk.Entry certPass;
		
		private global::Gtk.FileChooserButton filechooserbuttonCert;
		
		private global::Gtk.Label label5;
		
		private global::Gtk.Entry nameExCert;
		
		private global::Gtk.Label passLabel;
		
		private global::Gtk.Label pathlabel;
		
		private global::Gtk.Entry privPass;
		
		private global::Gtk.Label privPassLabel;
		
		private global::Gtk.Button buttonCancel;
		
		private global::Gtk.Button buttonOk;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget catoolgui.exportCert
			this.Name = "catoolgui.exportCert";
			this.Title = global::Mono.Unix.Catalog.GetString ("Export Certificate");
			this.WindowPosition = ((global::Gtk.WindowPosition)(4));
			this.Modal = true;
			this.AllowShrink = true;
			// Internal child catoolgui.exportCert.VBox
			global::Gtk.VBox w1 = this.VBox;
			w1.Name = "dialog1_VBox";
			w1.BorderWidth = ((uint)(2));
			// Container child dialog1_VBox.Gtk.Box+BoxChild
			this.table3 = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.table3.Name = "table3";
			this.table3.RowSpacing = ((uint)(6));
			this.table3.ColumnSpacing = ((uint)(6));
			// Container child table3.Gtk.Table+TableChild
			this.certPass = new global::Gtk.Entry ();
			this.certPass.CanFocus = true;
			this.certPass.Name = "certPass";
			this.certPass.IsEditable = true;
			this.certPass.Visibility = false;
			this.certPass.InvisibleChar = '•';
			this.table3.Add (this.certPass);
			global::Gtk.Table.TableChild w2 = ((global::Gtk.Table.TableChild)(this.table3 [this.certPass]));
			w2.TopAttach = ((uint)(3));
			w2.BottomAttach = ((uint)(4));
			w2.LeftAttach = ((uint)(1));
			w2.RightAttach = ((uint)(2));
			w2.XPadding = ((uint)(50));
			w2.YPadding = ((uint)(5));
			w2.XOptions = ((global::Gtk.AttachOptions)(4));
			w2.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.filechooserbuttonCert = new global::Gtk.FileChooserButton (global::Mono.Unix.Catalog.GetString ("Select a Folder"), ((global::Gtk.FileChooserAction)(2)));
			this.filechooserbuttonCert.Name = "filechooserbuttonCert";
			this.table3.Add (this.filechooserbuttonCert);
			global::Gtk.Table.TableChild w3 = ((global::Gtk.Table.TableChild)(this.table3 [this.filechooserbuttonCert]));
			w3.TopAttach = ((uint)(1));
			w3.BottomAttach = ((uint)(2));
			w3.LeftAttach = ((uint)(1));
			w3.RightAttach = ((uint)(2));
			w3.XPadding = ((uint)(50));
			w3.YPadding = ((uint)(5));
			w3.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.label5 = new global::Gtk.Label ();
			this.label5.Name = "label5";
			this.label5.Xalign = 0F;
			this.label5.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Exported Cert. Name</b>");
			this.label5.UseMarkup = true;
			this.table3.Add (this.label5);
			global::Gtk.Table.TableChild w4 = ((global::Gtk.Table.TableChild)(this.table3 [this.label5]));
			w4.XPadding = ((uint)(10));
			w4.YPadding = ((uint)(5));
			w4.XOptions = ((global::Gtk.AttachOptions)(4));
			w4.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.nameExCert = new global::Gtk.Entry ();
			this.nameExCert.CanFocus = true;
			this.nameExCert.Name = "nameExCert";
			this.nameExCert.IsEditable = true;
			this.nameExCert.InvisibleChar = '•';
			this.table3.Add (this.nameExCert);
			global::Gtk.Table.TableChild w5 = ((global::Gtk.Table.TableChild)(this.table3 [this.nameExCert]));
			w5.LeftAttach = ((uint)(1));
			w5.RightAttach = ((uint)(2));
			w5.XPadding = ((uint)(50));
			w5.YPadding = ((uint)(5));
			w5.XOptions = ((global::Gtk.AttachOptions)(4));
			w5.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.passLabel = new global::Gtk.Label ();
			this.passLabel.Name = "passLabel";
			this.passLabel.Xalign = 0F;
			this.passLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Password Exported\nCertificate (optional)</b>");
			this.passLabel.UseMarkup = true;
			this.table3.Add (this.passLabel);
			global::Gtk.Table.TableChild w6 = ((global::Gtk.Table.TableChild)(this.table3 [this.passLabel]));
			w6.TopAttach = ((uint)(3));
			w6.BottomAttach = ((uint)(4));
			w6.XPadding = ((uint)(10));
			w6.YPadding = ((uint)(5));
			w6.XOptions = ((global::Gtk.AttachOptions)(4));
			w6.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.pathlabel = new global::Gtk.Label ();
			this.pathlabel.Name = "pathlabel";
			this.pathlabel.Xalign = 0F;
			this.pathlabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Choose Path to Export</b>");
			this.pathlabel.UseMarkup = true;
			this.table3.Add (this.pathlabel);
			global::Gtk.Table.TableChild w7 = ((global::Gtk.Table.TableChild)(this.table3 [this.pathlabel]));
			w7.TopAttach = ((uint)(1));
			w7.BottomAttach = ((uint)(2));
			w7.XPadding = ((uint)(10));
			w7.YPadding = ((uint)(5));
			w7.XOptions = ((global::Gtk.AttachOptions)(4));
			w7.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.privPass = new global::Gtk.Entry ();
			this.privPass.CanFocus = true;
			this.privPass.Name = "privPass";
			this.privPass.IsEditable = true;
			this.privPass.Visibility = false;
			this.privPass.InvisibleChar = '•';
			this.table3.Add (this.privPass);
			global::Gtk.Table.TableChild w8 = ((global::Gtk.Table.TableChild)(this.table3 [this.privPass]));
			w8.TopAttach = ((uint)(2));
			w8.BottomAttach = ((uint)(3));
			w8.LeftAttach = ((uint)(1));
			w8.RightAttach = ((uint)(2));
			w8.XPadding = ((uint)(50));
			w8.YPadding = ((uint)(5));
			w8.XOptions = ((global::Gtk.AttachOptions)(4));
			w8.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table3.Gtk.Table+TableChild
			this.privPassLabel = new global::Gtk.Label ();
			this.privPassLabel.Name = "privPassLabel";
			this.privPassLabel.Xalign = 0F;
			this.privPassLabel.LabelProp = global::Mono.Unix.Catalog.GetString ("<b>Password Privkey</b>");
			this.privPassLabel.UseMarkup = true;
			this.table3.Add (this.privPassLabel);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table3 [this.privPassLabel]));
			w9.TopAttach = ((uint)(2));
			w9.BottomAttach = ((uint)(3));
			w9.XPadding = ((uint)(10));
			w9.YPadding = ((uint)(5));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			w1.Add (this.table3);
			global::Gtk.Box.BoxChild w10 = ((global::Gtk.Box.BoxChild)(w1 [this.table3]));
			w10.Position = 0;
			w10.Expand = false;
			w10.Fill = false;
			// Internal child catoolgui.exportCert.ActionArea
			global::Gtk.HButtonBox w11 = this.ActionArea;
			w11.Name = "dialog1_ActionArea";
			w11.Spacing = 10;
			w11.BorderWidth = ((uint)(5));
			w11.LayoutStyle = ((global::Gtk.ButtonBoxStyle)(4));
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonCancel = new global::Gtk.Button ();
			this.buttonCancel.CanDefault = true;
			this.buttonCancel.CanFocus = true;
			this.buttonCancel.Name = "buttonCancel";
			this.buttonCancel.UseStock = true;
			this.buttonCancel.UseUnderline = true;
			this.buttonCancel.Label = "gtk-cancel";
			this.AddActionWidget (this.buttonCancel, -6);
			global::Gtk.ButtonBox.ButtonBoxChild w12 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w11 [this.buttonCancel]));
			w12.Expand = false;
			w12.Fill = false;
			// Container child dialog1_ActionArea.Gtk.ButtonBox+ButtonBoxChild
			this.buttonOk = new global::Gtk.Button ();
			this.buttonOk.CanDefault = true;
			this.buttonOk.CanFocus = true;
			this.buttonOk.Name = "buttonOk";
			this.buttonOk.UseStock = true;
			this.buttonOk.UseUnderline = true;
			this.buttonOk.Label = "gtk-ok";
			this.AddActionWidget (this.buttonOk, -5);
			global::Gtk.ButtonBox.ButtonBoxChild w13 = ((global::Gtk.ButtonBox.ButtonBoxChild)(w11 [this.buttonOk]));
			w13.Position = 1;
			w13.Expand = false;
			w13.Fill = false;
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 444;
			this.DefaultHeight = 222;
			this.Show ();
			this.buttonCancel.Clicked += new global::System.EventHandler (this.OnButtonCancelClicked);
			this.buttonOk.Clicked += new global::System.EventHandler (this.OnButtonOkClicked);
		}
	}
}
